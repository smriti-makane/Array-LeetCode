153. Find Minimum in Rotated Sorted Array
Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become: Given the sorted rotated array nums of unique elements, return the minimum element of this array.

Example 1:
Input: nums = [3,4,5,1,2]
Output: 1

Example 2:
Input: nums = [4,5,6,7,0,1,2]
Output: 0

Example 3:
Input: nums = [11,13,15,17]
Output: 11


Approach used : Two Pointer 
class Solution {
    public int findMin(int[] nums) {
        int left= 0 ; 
        int right = nums.length-1; 
        int min = nums[0]; 

        while(left<=right){
            if(nums[left]<=min){
                min = nums[left]; 
            }
            if(nums[right]<= right){
                min = nums[right]; 
            }
            left++; 
            right--; 
        }
        return min; 
    }
}
